{
  "name": "gulp-inline-source",
  "version": "2.1.0",
  "description": "Inline flagged js & css sources.",
  "license": "MIT",
  "author": {
    "name": "Filip Malinowski",
    "email": "filip@fmal.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fmal/gulp-inline-source.git"
  },
  "keywords": [
    "gulpplugin",
    "inline",
    "css",
    "javascript"
  ],
  "scripts": {
    "test": "tape test/*.js | faucet"
  },
  "dependencies": {
    "inline-source": "~4.0.1",
    "gulp-util": "~3.0.6",
    "through2": "~2.0.0"
  },
  "main": "index.js",
  "devDependencies": {
    "faucet": "0.0.1",
    "tape": "^4.0.1"
  },
  "readme": "# gulp-inline-source\n\n[![NPM Version](https://img.shields.io/npm/v/gulp-inline-source.svg)](https://www.npmjs.com/package/gulp-inline-source)\n[![Build Status](https://travis-ci.org/fmal/gulp-inline-source.svg?branch=master)](https://travis-ci.org/fmal/gulp-inline-source)\n[![Dependency Status](https://img.shields.io/gemnasium/fmal/gulp-inline-source.svg)](https://gemnasium.com/fmal/gulp-inline-source)\n\n> Inline all `<script>`, `<link>` and `<img>` tags that contain the `inline` attribute with [inline-source](https://github.com/popeindustries/inline-source).\n\n## How it works\n\n```html\n<!-- located at src/html/index.html -->\n<html>\n  <head>\n    <!-- inline src/js/inlineScript.js -->\n    <script src=\"../js/inlineScript.js\" inline></script>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\n```js\n// located at src/js/inlineScript.js\n\nfunction test() {\n  var foo = 'lorem ipsum';\n  return foo;\n}\n```\n\nOutput:\n```html\n<html>\n  <head>\n    <script>function test(){var a=\"lorem ipsum\";return a}</script>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\n## Install\n\n```bash\n$ npm install gulp-inline-source --save-dev\n```\n\n## Usage\n\n```javascript\nvar gulp = require('gulp');\nvar inlinesource = require('gulp-inline-source');\n\ngulp.task('inlinesource', function () {\n    return gulp.src('./src/*.html')\n        .pipe(inlinesource())\n        .pipe(gulp.dest('./out'));\n});\n```\n\nOptionally, you can provide [some options](https://github.com/popeindustries/inline-source#usage) through an options object:\n\n```javascript\nvar gulp = require('gulp');\nvar inlinesource = require('gulp-inline-source');\n\ngulp.task('inlinesource', function () {\n    var options = {\n        compress: false\n    };\n\n    return gulp.src('./src/*.html')\n        .pipe(inlinesource(options))\n        .pipe(gulp.dest('./out'));\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fmal/gulp-inline-source/issues"
  },
  "_id": "gulp-inline-source@2.1.0",
  "dist": {
    "shasum": "f38d0f8acec9f53c2c0c6c59778630de69eeeb08"
  },
  "_from": "gulp-inline-source@2.1.x",
  "_resolved": "https://registry.npmjs.org/gulp-inline-source/-/gulp-inline-source-2.1.0.tgz"
}
